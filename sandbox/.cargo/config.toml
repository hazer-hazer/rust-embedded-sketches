[target.'cfg(all(target_arch = "arm", target_os = "none"))']
runner = "elf2uf2-rs -d"

# [target.thumbv7m-none-eabi]
# # uncomment this to make `cargo run` execute programs on QEMU
# # runner = "qemu-system-arm -cpu cortex-m3 -machine lm3s6965evb -nographic -semihosting-config enable=on,target=native -kernel"
# runner = "qemu-system-arm -cpu cortex-m0 -machine microbit -nographic -semihosting-config enable=on,target=native -gdb tcp::3333 -kernel"

# Choose a default "cargo run" tool (see README for more info)
# - `probe-rs` provides flashing and defmt via a hardware debugger, and stack unwind on panic
# - elf2uf2-rs loads firmware over USB when the rp2040 is in boot mode
# runner = "probe-rs run --chip RP2040 --protocol swd"

rustflags = [
  "-C",
  "linker=flip-link",
  "-C",
  "link-arg=--nmagic",
  "-C",
  "link-arg=-Tlink.x",
  "-C",
  "link-arg=-Tdefmt.x",

  # Code-size optimizations.
  #   trap unreachable can save a lot of space, but requires nightly compiler.
  #   uncomment the next line if you wish to enable it
  # "-Z", "trap-unreachable=no",
  "-C",
  "inline-threshold=5",
  "-C",
  "no-vectorize-loops",
]

[build]
target = "thumbv6m-none-eabi"

[env]
DEFMT_LOG = "debug"

# [package]
# default-target = []

[alias]
rb = "run --target=thumbv6m-none-eabi --bin"
rrb = "run --target=thumbv6m-none-eabi --release --bin"
xtask = "run --target=default --manifest-path xtask/Cargo.toml --"
# qemut = "test --lib --target thumbv7m-none-eabi"
